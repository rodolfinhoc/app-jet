// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api.Models.ComboProdutoModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("codigo_empresa")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_empresa");

                    b.Property<string>("codigo_item")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("codigo_item");

                    b.Property<string>("descricao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descricao");

                    b.HasKey("codigo");

                    b.ToTable("tb_cad_produto", (string)null);
                });

            modelBuilder.Entity("api.Models.EmissaoPedidoItemModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("bonificacao")
                        .HasColumnType("INT")
                        .HasColumnName("bonificacao");

                    b.Property<int>("codigo_pedido")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_pedido");

                    b.Property<int>("codigo_produto")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_produto");

                    b.Property<int>("codigo_usuario")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_usuario");

                    b.Property<decimal>("desconto")
                        .HasPrecision(15, 2)
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("desconto");

                    b.Property<string>("numero_lote")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("numero_lote");

                    b.Property<decimal>("quantidade")
                        .HasPrecision(15, 2)
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("valor_total")
                        .HasPrecision(15, 2)
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("valor_total");

                    b.Property<decimal>("valor_unitario")
                        .HasPrecision(15, 2)
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("valor_unitario");

                    b.HasKey("codigo");

                    b.ToTable("tb_ven_pedido_item", (string)null);
                });

            modelBuilder.Entity("api.Models.EmissaoPedidoModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bairro")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("bairro");

                    b.Property<string>("celular")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("celular");

                    b.Property<string>("cep")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("cep");

                    b.Property<string>("cnpj_cpf")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("cnpj_cpf");

                    b.Property<int?>("codigo_empresa")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_empresa");

                    b.Property<int?>("codigo_evento")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_evento");

                    b.Property<int?>("codigo_forma_pagamento")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_forma_pagamento");

                    b.Property<int?>("codigo_usuario")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_usuario");

                    b.Property<string>("complemento")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("complemento");

                    b.Property<DateTime?>("data_input")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_input");

                    b.Property<string>("email")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("email");

                    b.Property<string>("identificacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("identificacao");

                    b.Property<string>("inscricao_estadual")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("inscricao_estadual");

                    b.Property<string>("logradouro")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("logradouro");

                    b.Property<string>("municipio")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("municipio");

                    b.Property<string>("numero")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("numero");

                    b.Property<string>("pais")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("pais");

                    b.Property<string>("razao_social")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("razao_social");

                    b.Property<int?>("tipo_inscricao_estadual")
                        .HasColumnType("INT")
                        .HasColumnName("tipo_inscricao_estadual");

                    b.Property<string>("uf")
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR(2)")
                        .HasColumnName("uf");

                    b.HasKey("codigo");

                    b.ToTable("tb_ven_pedido", (string)null);
                });

            modelBuilder.Entity("api.Models.EventoModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UsuarioModelcodigo")
                        .HasColumnType("int");

                    b.Property<int?>("ativo")
                        .HasColumnType("INT")
                        .HasColumnName("ativo");

                    b.Property<string>("bairro")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("bairro");

                    b.Property<string>("cep")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("cep");

                    b.Property<int?>("codigo_entidade")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_entidade");

                    b.Property<int>("codigo_vendedor")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_vendedor");

                    b.Property<string>("complemento")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("data_inicio")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("data_termino")
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_termino");

                    b.Property<string>("descricao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("descricao");

                    b.Property<string>("logradouro")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("logradouro");

                    b.Property<string>("municipio")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("municipio");

                    b.Property<string>("numero")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("numero");

                    b.Property<string>("observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("observacao");

                    b.Property<string>("pais")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)")
                        .HasColumnName("pais");

                    b.Property<string>("uf")
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR(2)")
                        .HasColumnName("uf");

                    b.HasKey("codigo");

                    b.HasIndex("UsuarioModelcodigo");

                    b.ToTable("tb_cad_evento", (string)null);
                });

            modelBuilder.Entity("api.Models.EventoRemessaModel", b =>
                {
                    b.Property<int>("codigo_identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("codigo_identificador")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("codigo")
                        .HasColumnType("INT")
                        .HasColumnName("codigo");

                    b.Property<int?>("codigo_empresa")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_empresa");

                    b.Property<int>("codigo_evento")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_evento");

                    b.Property<int>("codigo_item")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_item");

                    b.Property<string>("lote")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("lote");

                    b.Property<float>("quantidade")
                        .HasColumnType("FLOAT")
                        .HasColumnName("quantidade");

                    b.Property<float>("valor_unitario")
                        .HasColumnType("FLOAT")
                        .HasColumnName("valor_unitario");

                    b.HasKey("codigo_identificador");

                    b.ToTable("tb_ven_evento_remessa", (string)null);
                });

            modelBuilder.Entity("api.Models.FormaPagamentoModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("descricao");

                    b.HasKey("codigo");

                    b.ToTable("tb_stc_forma_pagamento", (string)null);
                });

            modelBuilder.Entity("api.Models.MenuModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("admin")
                        .HasColumnType("INT")
                        .HasColumnName("admin");

                    b.Property<int?>("ativo")
                        .HasColumnType("INT")
                        .HasColumnName("ativo");

                    b.Property<string>("children")
                        .HasMaxLength(5000)
                        .HasColumnType("VARCHAR(5000)")
                        .HasColumnName("children");

                    b.Property<int>("codigo_empresa")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_empresa");

                    b.Property<string>("router")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("router");

                    b.Property<string>("title")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("title");

                    b.HasKey("id");

                    b.ToTable("tb_cad_menu", (string)null);
                });

            modelBuilder.Entity("api.Models.Upload.UploadImagemModel", b =>
                {
                    b.Property<long>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("base64imagem")
                        .IsRequired()
                        .HasColumnType("LONGBLOB")
                        .HasColumnName("base64imagem");

                    b.Property<int>("codigo_pedido")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_pedido");

                    b.Property<DateTime>("data_input")
                        .HasMaxLength(150)
                        .HasColumnType("DATETIME")
                        .HasColumnName("data_input");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("descricao");

                    b.HasKey("codigo");

                    b.ToTable("tb_cad_pedido_anexo", (string)null);
                });

            modelBuilder.Entity("api.Models.UsuarioModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("admin")
                        .HasColumnType("INT")
                        .HasColumnName("admin");

                    b.Property<int?>("ativo")
                        .HasColumnType("INT")
                        .HasColumnName("ativo");

                    b.Property<int?>("codigo_empresa")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_empresa");

                    b.Property<int?>("codigo_vendedor")
                        .HasColumnType("INT")
                        .HasColumnName("codigo_vendedor");

                    b.Property<int?>("empresa")
                        .HasColumnType("INT")
                        .HasColumnName("empresa");

                    b.Property<string>("nome")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("nome");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("senha");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("usuario");

                    b.HasKey("codigo");

                    b.HasIndex(new[] { "usuario" }, "IX_usuario")
                        .IsUnique();

                    b.ToTable("tb_cad_usuario", (string)null);
                });

            modelBuilder.Entity("api.Models.VendedorModel", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ativo")
                        .HasColumnType("INT")
                        .HasColumnName("ativo");

                    b.Property<string>("nome")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nome");

                    b.HasKey("codigo");

                    b.ToTable("tb_cad_vendedor", (string)null);
                });

            modelBuilder.Entity("api.Models.EventoModel", b =>
                {
                    b.HasOne("api.Models.UsuarioModel", null)
                        .WithMany("evento")
                        .HasForeignKey("UsuarioModelcodigo");
                });

            modelBuilder.Entity("api.Models.UsuarioModel", b =>
                {
                    b.Navigation("evento");
                });
#pragma warning restore 612, 618
        }
    }
}
